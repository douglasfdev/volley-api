/* eslint-disable */
export default async () => {
    const t = {
        ["./modules/players/entities/player.entity"]: await import("./modules/players/entities/player.entity"),
        ["./modules/categories/entities/category.entity"]: await import("./modules/categories/entities/category.entity"),
        ["./modules/events/entities/event.entity"]: await import("./modules/events/entities/event.entity"),
        ["./modules/challenges/entities/challenge.entity"]: await import("./modules/challenges/entities/challenge.entity"),
        ["./modules/players/dto/update-player.dto"]: await import("./modules/players/dto/update-player.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./modules/challenges/entities/challenge.entity"), { "Challenges": { id: { required: false, type: () => String }, challengeDateTime: { required: true, type: () => Date }, status: { required: false, type: () => String }, category: { required: false, type: () => String }, solicitationDateTime: { required: false, type: () => Date }, responseDateTime: { required: false, type: () => Date }, requester: { required: true, type: () => t["./modules/players/entities/player.entity"].Players }, challenged: { required: true, type: () => [t["./modules/players/entities/player.entity"].Players] } } }], [import("./modules/players/entities/player.entity"), { "Players": { id: { required: false, type: () => String }, cellphone: { required: true, type: () => String }, email: { required: true, type: () => String }, name: { required: true, type: () => String }, ranking: { required: true, type: () => String }, rankingPosition: { required: true, type: () => Number }, pictureUrlPlayer: { required: false, type: () => String }, status: { required: false, type: () => Number }, created_at: { required: false, type: () => Date }, updated_at: { required: false, type: () => Date }, deleted_at: { required: false, type: () => Date }, categories: { required: true, type: () => [t["./modules/categories/entities/category.entity"].Categories] }, events: { required: true, type: () => [t["./modules/events/entities/event.entity"].Events] }, challenger: { required: true, type: () => t["./modules/challenges/entities/challenge.entity"].Challenges }, challengers: { required: true, type: () => t["./modules/challenges/entities/challenge.entity"].Challenges } } }], [import("./modules/categories/entities/category.entity"), { "Categories": { id: { required: false, type: () => String }, category: { required: true, type: () => String }, description: { required: true, type: () => String }, status: { required: true, type: () => Number }, created_at: { required: false, type: () => Date }, updated_at: { required: false, type: () => Date }, deleted_at: { required: false, type: () => Date }, events: { required: true, type: () => [t["./modules/events/entities/event.entity"].Events] }, players: { required: true, type: () => [t["./modules/players/entities/player.entity"].Players] } } }], [import("./modules/events/entities/event.entity"), { "Events": { id: { required: false, type: () => String }, name: { required: true, type: () => String }, active: { required: true, type: () => Number }, operation: { required: true, type: () => String }, value: { required: true, type: () => Number }, created_at: { required: false, type: () => Date }, updatedAt: { required: false, type: () => Date }, deletedAt: { required: false, type: () => Date }, categories: { required: true, type: () => [t["./modules/categories/entities/category.entity"].Categories] }, players: { required: true, type: () => [t["./modules/players/entities/player.entity"].Players] } } }], [import("./modules/events/dto/create-event.dto"), { "CreateEventDto": { name: { required: true, type: () => String }, operation: { required: true, type: () => String }, value: { required: true, type: () => Number } } }], [import("./modules/players/dto/create-player.dto"), { "CreatePlayerDto": { cellphone: { required: true, type: () => String }, email: { required: true, type: () => String }, name: { required: true, type: () => String }, ranking: { required: true, type: () => String }, rankingPosition: { required: true, type: () => Number } } }], [import("./modules/players/dto/update-player.dto"), { "UpdatePlayerDto": {} }], [import("./modules/categories/dtos/create-category.dto"), { "CreateCategoryDto": { category: { required: true, type: () => String }, description: { required: true, type: () => String } } }], [import("./modules/categories/dtos/update-category.dto"), { "UpdateCategoryDto": {} }], [import("./modules/challenges/dto/create-challenge.dto"), { "CreateChallengeDto": { challengeDateTime: { required: true, type: () => String }, requester: { required: true, type: () => t["./modules/players/entities/player.entity"].Players } } }], [import("./modules/challenges/dto/update-challenge.dto"), { "UpdateChallengeDto": {} }], [import("./modules/events/dto/update-event.dto"), { "UpdateEventDto": {} }]], "controllers": [[import("./modules/events/controller/events.controller"), { "EventsController": { "create": { type: Object }, "insertEventIntoPlayer": { type: Object }, "insertEventIntoCategory": { type: t["./modules/events/entities/event.entity"].Events }, "findAll": { type: [t["./modules/events/entities/event.entity"].Events] }, "findOne": { type: [t["./modules/categories/entities/category.entity"].Categories] }, "update": { type: Object }, "remove": {} } }], [import("./modules/categories/controller/categories.controller"), { "CategoriesController": { "create": { type: t["./modules/categories/entities/category.entity"].Categories }, "insertCategoryIntoPlayers": { type: t["./modules/categories/entities/category.entity"].Categories }, "findAll": { type: [t["./modules/categories/entities/category.entity"].Categories] }, "findOne": { type: [t["./modules/events/entities/event.entity"].Events] }, "findOneById": { type: t["./modules/categories/entities/category.entity"].Categories }, "update": { type: Object }, "remove": {} } }], [import("./modules/players/controller/players.controller"), { "PlayersController": { "create": { type: Object }, "findAll": { type: [t["./modules/players/dto/update-player.dto"].UpdatePlayerDto] }, "findOne": { type: Object }, "update": { type: t["./modules/players/dto/update-player.dto"].UpdatePlayerDto }, "remove": {} } }], [import("./modules/challenges/controller/challenges.controller"), { "ChallengesController": { "create": { type: t["./modules/challenges/entities/challenge.entity"].Challenges }, "accept": { type: [String] }, "findAll": { type: String }, "findOne": { type: String }, "update": { type: String }, "remove": { type: String } } }]] } };
};